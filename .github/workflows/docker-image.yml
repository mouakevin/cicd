name: Deploy to AWS ECR

on:
  push:
    branches:
      - master

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::730335382802:role/github-testing-cicd
          aws-region: us-west-1
          role-session-name: GithubActions

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin $(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.us-west-1.amazonaws.com

      - name: Build Flask container
        run: |
          IMAGE_TAG=flasktesting:$(date +%s)
          docker build . --file Dockerfile --tag $IMAGE_TAG

      - name: Tag and push Flask image to Amazon ECR
        run: |
          ECR_REGISTRY=$(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.us-west-1.amazonaws.com/git22
          docker tag $IMAGE_TAG $ECR_REGISTRY/$IMAGE_TAG
          docker push $ECR_REGISTRY/$IMAGE_TAG

      - name: Build Nginx container
        run: |
          IMAGE_TAG=nginxtesting:$(date +%s)
          docker build ./nginx --file nginx/Dockerfile --tag $IMAGE_TAG

      - name: Tag and push Nginx image to Amazon ECR
        run: |
          ECR_REGISTRY=$(aws sts get-caller-identity --query 'Account' --output text).dkr.ecr.us-west-1.amazonaws.com/git22
          docker tag $IMAGE_TAG $ECR_REGISTRY/$IMAGE_TAG
          docker push $ECR_REGISTRY/$IMAGE_TAG



